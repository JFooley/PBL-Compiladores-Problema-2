register r {
  integer a; 
  integer b;
}

constants {
  integer c = 1;
}

variables {
  string z = "teste string";
  integer g = 1;
  integer v_g[2];
  integer m_g[1][2];
}

function integer sum_obj(r p) {
  variables {  
  }
  return p.a + p.b;
}

function integer sum(integer a, integer b) {
  variables {  
  }
  return a + b;
}

function string sum1(integer a, integer b) {
  variables {  
  }
  return "a + b";
}

main() {
  variables {
    string teste = "aaa";
    integer a = 5;
    integer b = 1;
    integer v[2];
    integer m[1][2];
    integer result;
    integer n1;
    integer n2;
    r r1;
    boolean if1 = true;
    boolean bol;
  }

  a = teste + 5; //deve dar erro
  a = 5+1+a[0]; //deve dar erro
  a = 5 +2 + teste; //deve dar erro
  v[0] = a[0] + v[0];
  a[0] = 5;
  v[0] = 1;
  v[1] = 1;
  m[0][0] = 1;
  m[0][1] = 1;
  result = sum(teste, b);
  result = sum(v[0], v[1]);
  result = sum(m[0][0], m[0][1]);
  result = sum(r1.a, r1.b);
  sum(1, 2);
  result = sum(c, g);
  result = sum(sum1(teste, n2), sum(a, b));
  sum_obj(r1);
  n1.a = 0;
  
  /* Teste do incremento e decremento */
  v++;            /* erro: incrementar vetor - ok*/
  m--;            /* erro: decrementar matriz - ok */
  v[teste]--;     /* erro: indice não inteiro (variavel) - ok */
  m[3.1][3.4]++;  /* erro: indice não inteiro - ok */
  c++;            /* erro: incremento de constante - ok */
  teste++;        /* erro: variavel não inteira - ok */
  n1--;           /* erro: variavel não inicializada  - ok */
  x++;            /* erro: variavel não existe no escopo - ok */

  for (integer n = 4; n>20; n--){
    a = n * 8 + 4;
    for(integer x = 5; x>20; x--){
      n = 8;
    }
  }
  
  for (a = 0; a>5; a++){
    b = 5;
  }

  while ((a && b) || a != c){
    if (c && b) then {
      num++;
    } else {
      num--;
    }

    if (if1) then{
      a++;
    }

    if (a > b) then{
      a++;
    }

    if (3) then{
      a++;
    }

    if (true) then{
      a++;
    }

    if (a) then{
      a++;
    }
    
    if (n1) then {  //erro de nao inicializada
      a++;
    }

    if (bol) then {  //erro de nao inicializada
      a++;
    }
 
    if (r1) then {   //erro de register
      a++;
    }
    r1.a = 2;
    if (r1.a) then {
      a++;
    }

    if (v) then {  //erro de vetor
      a++;
    }

    if (teste) then {  //erro de string
      a++;
    }
  }
  
}
  

  
  
